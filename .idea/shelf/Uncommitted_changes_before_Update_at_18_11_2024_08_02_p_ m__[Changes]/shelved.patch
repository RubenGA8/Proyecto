Index: constants/Styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { StyleSheet, Dimensions } from \"react-native\";\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nexport const Estilos = StyleSheet.create(\r\n    {\r\n        Principal:{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: width,\r\n            height: height,\r\n        },\r\n\r\n        Boton:{\r\n            flexDirection: \"row\",\r\n            backgroundColor: \"#FFCA00\",\r\n            borderRadius: 7,\r\n            margin: \"3%\",\r\n            padding: \"2.5%\",\r\n            justifyContent: \"center\",\r\n        },\r\n\r\n        ContenedorTitulos:{\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            marginTop: \"3.5%\",\r\n            marginBottom: \"5.5%\",\r\n        },\r\n\r\n        ContenedorScroll:{\r\n            flex: 1,\r\n            //width: \"75%\",\r\n            backgroundColor: '#9819e1',\r\n        },\r\n\r\n        Contenedor:{\r\n            //flex: 2,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"2.5%\",\r\n        },\r\n\r\n        TextoTitulo:{\r\n            fontFamily: \"EABold\",\r\n            fontSize: height * 0.035,\r\n        },\r\n\r\n        TextoNormal:{\r\n            fontFamily: \"EARegular\",\r\n        },\r\n    }\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/constants/Styles.ts b/constants/Styles.ts
--- a/constants/Styles.ts	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/constants/Styles.ts	(date 1731981670250)
@@ -1,6 +1,4 @@
-import { StyleSheet, Dimensions } from "react-native";
-
-const { width, height } = Dimensions.get('window');
+import { StyleSheet } from "react-native";
 
 export const Estilos = StyleSheet.create(
     {
Index: app/lista_encuestas.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Text, View, Pressable, Button, ScrollView, FlatList} from 'react-native';\r\nimport { Link, router } from 'expo-router';\r\nimport { useState, useContext } from 'react'\r\nimport { Estilos } from '@/constants/Styles';\r\nimport { endpoints } from '@/constants/endpoints';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { ContextEncuesta } from './context';\r\n\r\nexport default function Index() {  \r\n    \r\n    const getEncuestas = async () =>{\r\n        console.log('dentro');\r\n        fetch(endpoints.ENCUESTAS, {\r\n        }).then(\r\n            response => response.json()\r\n        ).then(\r\n            data => {\r\n                // console.log(data);\r\n                const enc = data['encuestas'];\r\n\r\n                console.log(enc);\r\n                var res: any[] = [];\r\n                console.log(enc);\r\n                for(var i in enc){\r\n                    var aux = {\r\n                        id: enc[i][0],\r\n                        nombre: enc[i][1]\r\n                    };\r\n                    res.push(aux);\r\n                }\r\n                console.log(res);\r\n\r\n                setHayEncuestas(true);\r\n                setEncuestas(res);\r\n                return res;\r\n            }\r\n        )\r\n    }\r\n    const [encuestas, setEncuestas] = useState(getEncuestas);\r\n    const [hayEncuestas, setHayEncuestas] = useState(false);\r\n    const {encuesta, setEncuesta} = useContext(ContextEncuesta);\r\n\r\n    const Extraibles = {\r\n\r\n    }\r\n\r\n    function verInfo(){\r\n        console.log(encuestas);\r\n    }\r\n\r\n    function onPressLista(id_lista, nombre_lista){\r\n        const form = new FormData();\r\n        form.append('encuesta', id_lista);\r\n        console.log(id_lista);\r\n        fetch(endpoints.PREGUNTAS, {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(\r\n            response => response.json()\r\n        ).then(\r\n            data => {\r\n                // console.log(data);\r\n                const enc_data = data['encuesta'];\r\n\r\n                // console.log(enc_data);\r\n                var aux_preguntas: any[] = [];\r\n                var id_pregunta = enc_data[0][3];\r\n                var aux_respuestas: any[] = [];\r\n                var aux_pregunta_nom;\r\n                for(var i in enc_data){//for de preguntas\r\n                    if(id_pregunta == enc_data[i][3]){//si es la misma pregunta\r\n                        aux_pregunta_nom = enc_data[i][0]\r\n                        id_pregunta = enc_data[i][3];\r\n                        var aux_respuesta_obj = {\r\n                            respuesta_id: enc_data[i][4],\r\n                            respuesta: enc_data[i][1],\r\n                            numero: enc_data[i][2],\r\n                        };\r\n                        // console.log(\"---------respuesta---------\");\r\n                        aux_respuestas.push(aux_respuesta_obj);\r\n                        // console.log(aux_respuestas);\r\n                    }else{\r\n                        var aux_pregunta_obj = {\r\n                            pregunta_id: id_pregunta,\r\n                            pregunta: aux_pregunta_nom,\r\n                            respuestas: aux_respuestas\r\n                        };\r\n                        aux_preguntas.push(aux_pregunta_obj);\r\n                        aux_respuestas = [];\r\n                        id_pregunta = enc_data[i][3]\r\n                        \r\n                        aux_pregunta_nom = enc_data[i][0];\r\n                        id_pregunta = enc_data[i][3];\r\n                        var aux_respuesta_obj = {\r\n                            respuesta_id: enc_data[i][4],\r\n                            respuesta: enc_data[i][1],\r\n                            numero: enc_data[i][2],\r\n                        };\r\n                        // console.log(\"---------respuesta---------\");\r\n                        aux_respuestas.push(aux_respuesta_obj);\r\n                    }\r\n                    if(enc_data.length == parseInt(i)+1){\r\n                        var aux_pregunta_obj = {\r\n                            pregunta_id: id_pregunta,\r\n                            pregunta: aux_pregunta_nom,\r\n                            respuestas: aux_respuestas\r\n                        };\r\n                        aux_preguntas.push(aux_pregunta_obj);\r\n                    }\r\n                }\r\n                var enc = {\r\n                    encuesta:nombre_lista,\r\n                    preguntas: aux_preguntas\r\n                };\r\n                setEncuesta(enc);\r\n                router.navigate('/encuesta');\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n  return (\r\n    <SafeAreaView style={Estilos.Principal}>\r\n        <View style={Estilos.ContenedorTitulos}>\r\n            <Text style={Estilos.TextoTitulo}>Encuestas</Text>\r\n            <Pressable onPress={verInfo}><Text>Hola</Text></Pressable>\r\n        </View>\r\n\r\n        <View style={Estilos.ContenedorScroll} >\r\n            {hayEncuestas?(\r\n                <View>\r\n                    <ScrollView style={Estilos.ContenedorScroll} showsVerticalScrollIndicator={false}>\r\n                        {encuestas.map((encuesta)=>{\r\n                            return (\r\n                                <View key={encuesta.id}>\r\n                                    <Pressable style={Estilos.Boton} onPress={()=>onPressLista(encuesta.id, encuesta.nombre)}>\r\n                                        <Text style={Estilos.TextoNormal}>{encuesta.nombre}</Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            );\r\n                        })}\r\n                    </ScrollView>\r\n                </View>\r\n            ):undefined}\r\n        </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/lista_encuestas.tsx b/app/lista_encuestas.tsx
--- a/app/lista_encuestas.tsx	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/app/lista_encuestas.tsx	(date 1731981670250)
@@ -142,7 +142,6 @@
                     </ScrollView>
                 </View>
             ):undefined}
-        </View>
     </SafeAreaView>
   );
 }
Index: app/_layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Stack } from \"expo-router\";\r\nimport { ContextEncuestaProvider } from \"./context\";\r\n\r\nexport default function RootLayout() {\r\n  return(\r\n    <ContextEncuestaProvider>\r\n      <Stack>\r\n        <Stack.Screen name='index' options={{headerShown: false}} />\r\n        <Stack.Screen name='editar' options={{headerShown: false}} />\r\n        <Stack.Screen name='crear' options={{headerShown: false}} />\r\n        <Stack.Screen name='lista_encuestas' options={{headerShown: false}} />\r\n        <Stack.Screen name='encuesta' options={{headerShown: false}} />\r\n      </Stack>\r\n    </ContextEncuestaProvider>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/_layout.tsx b/app/_layout.tsx
--- a/app/_layout.tsx	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/app/_layout.tsx	(date 1731981670249)
@@ -5,11 +5,11 @@
   return(
     <ContextEncuestaProvider>
       <Stack>
-        <Stack.Screen name='index' options={{headerShown: false}} />
-        <Stack.Screen name='editar' options={{headerShown: false}} />
-        <Stack.Screen name='crear' options={{headerShown: false}} />
-        <Stack.Screen name='lista_encuestas' options={{headerShown: false}} />
-        <Stack.Screen name='encuesta' options={{headerShown: false}} />
+        <Stack.Screen name='index'/>
+        <Stack.Screen name='editar'/>
+        <Stack.Screen name='crear'/>
+        <Stack.Screen name='lista_encuesta'/>
+        <Stack.Screen name='encuesta'/>
       </Stack>
     </ContextEncuestaProvider>
   );
Index: app/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Text, View, Pressable, Button } from 'react-native';\r\nimport { Link, router } from 'expo-router';\r\nimport { useFonts } from \"expo-font\";\r\n\r\nimport { Estilos } from \"@/constants/Styles\";\r\nimport { ContextEncuesta } from './context';\r\n\r\nexport default function Index() {\r\n  function onButtonEdit(){\r\n    console.log('Click');\r\n    //router.replace('/editar');\r\n    router.navigate('/editar')\r\n  }\r\n  function onButtonList(){\r\n    console.log('Click');\r\n    router.navigate('/lista_encuestas');\r\n    //router.replace('/lista_encuestas');\r\n  }\r\n\r\n  function onButtonCrear(){\r\n    router.navigate('/crear');\r\n  }\r\n\r\n  const [fontsLoaded] = useFonts({\r\n    'EABold': require(\"../assets/fonts/EABold.ttf\"),\r\n    'EASemiBold': require(\"../assets/fonts/EASemiBold.ttf\"),\r\n    'EAMedium': require(\"../assets/fonts/EAMedium.ttf\"),\r\n    'EARegular': require(\"../assets/fonts/EARegular.ttf\"),\r\n  });\r\n  \r\n  return (\r\n    <View style={Estilos.Principal}>\r\n    <Text>Edit app/index.tsx to edit this screen.</Text>\r\n    <Link href='/crear'>\r\n      <Pressable onPress={onButtonEdit}><Text>Crear Cuestionario</Text></Pressable>\r\n    </Link>\r\n    <Link href='/lista_encuestas'>\r\n      <Pressable onPress={onButtonList}><Text>Lista encuestas</Text></Pressable>\r\n    </Link>\r\n      {/* <Pressable onPress={onButtonCrear}><Text>Crear Lista</Text></Pressable> */}\r\n    </View>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/index.tsx b/app/index.tsx
--- a/app/index.tsx	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/app/index.tsx	(date 1731981670250)
@@ -1,7 +1,5 @@
 import { Text, View, Pressable, Button } from 'react-native';
 import { Link, router } from 'expo-router';
-import { useFonts } from "expo-font";
-
 import { Estilos } from "@/constants/Styles";
 import { ContextEncuesta } from './context';
 
@@ -20,13 +18,6 @@
   function onButtonCrear(){
     router.navigate('/crear');
   }
-
-  const [fontsLoaded] = useFonts({
-    'EABold': require("../assets/fonts/EABold.ttf"),
-    'EASemiBold': require("../assets/fonts/EASemiBold.ttf"),
-    'EAMedium': require("../assets/fonts/EAMedium.ttf"),
-    'EARegular': require("../assets/fonts/EARegular.ttf"),
-  });
   
   return (
     <View style={Estilos.Principal}>
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ /dev/null	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/Proyecto.iml" filepath="$PROJECT_DIR$/.idea/Proyecto.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ /dev/null	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/Proyecto.iml
===================================================================
diff --git a/.idea/Proyecto.iml b/.idea/Proyecto.iml
deleted file mode 100644
--- a/.idea/Proyecto.iml	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ /dev/null	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: android/app/src/main/java/com/vallhallax16/Proyecto/MainApplication.kt
===================================================================
diff --git a/android/app/src/main/java/com/vallhallax16/Proyecto/MainApplication.kt b/android/app/src/main/java/com/vallhallax16/Proyecto/MainApplication.kt
deleted file mode 100644
--- a/android/app/src/main/java/com/vallhallax16/Proyecto/MainApplication.kt	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ /dev/null	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
@@ -1,57 +0,0 @@
-package com.vallhallax16.Proyecto
-
-import android.app.Application
-import android.content.res.Configuration
-
-import com.facebook.react.PackageList
-import com.facebook.react.ReactApplication
-import com.facebook.react.ReactNativeHost
-import com.facebook.react.ReactPackage
-import com.facebook.react.ReactHost
-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load
-import com.facebook.react.defaults.DefaultReactNativeHost
-import com.facebook.react.soloader.OpenSourceMergedSoMapping
-import com.facebook.soloader.SoLoader
-
-import expo.modules.ApplicationLifecycleDispatcher
-import expo.modules.ReactNativeHostWrapper
-
-class MainApplication : Application(), ReactApplication {
-
-  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(
-        this,
-        object : DefaultReactNativeHost(this) {
-          override fun getPackages(): List<ReactPackage> {
-            val packages = PackageList(this).packages
-            // Packages that cannot be autolinked yet can be added manually here, for example:
-            // packages.add(new MyReactNativePackage());
-            return packages
-          }
-
-          override fun getJSMainModuleName(): String = ".expo/.virtual-metro-entry"
-
-          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG
-
-          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED
-          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED
-      }
-  )
-
-  override val reactHost: ReactHost
-    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)
-
-  override fun onCreate() {
-    super.onCreate()
-    SoLoader.init(this, OpenSourceMergedSoMapping)
-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
-      // If you opted-in for the New Architecture, we load the native entry point for this app.
-      load()
-    }
-    ApplicationLifecycleDispatcher.onApplicationCreate(this)
-  }
-
-  override fun onConfigurationChanged(newConfig: Configuration) {
-    super.onConfigurationChanged(newConfig)
-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)
-  }
-}
Index: android/app/src/main/java/com/vallhallax16/Proyecto/MainActivity.kt
===================================================================
diff --git a/android/app/src/main/java/com/vallhallax16/Proyecto/MainActivity.kt b/android/app/src/main/java/com/vallhallax16/Proyecto/MainActivity.kt
deleted file mode 100644
--- a/android/app/src/main/java/com/vallhallax16/Proyecto/MainActivity.kt	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ /dev/null	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
@@ -1,65 +0,0 @@
-package com.vallhallax16.Proyecto
-import expo.modules.splashscreen.SplashScreenManager
-
-import android.os.Build
-import android.os.Bundle
-
-import com.facebook.react.ReactActivity
-import com.facebook.react.ReactActivityDelegate
-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled
-import com.facebook.react.defaults.DefaultReactActivityDelegate
-
-import expo.modules.ReactActivityDelegateWrapper
-
-class MainActivity : ReactActivity() {
-  override fun onCreate(savedInstanceState: Bundle?) {
-    // Set the theme to AppTheme BEFORE onCreate to support
-    // coloring the background, status bar, and navigation bar.
-    // This is required for expo-splash-screen.
-    // setTheme(R.style.AppTheme);
-    // @generated begin expo-splashscreen - expo prebuild (DO NOT MODIFY) sync-f3ff59a738c56c9a6119210cb55f0b613eb8b6af
-    SplashScreenManager.registerOnActivity(this)
-    // @generated end expo-splashscreen
-    super.onCreate(null)
-  }
-
-  /**
-   * Returns the name of the main component registered from JavaScript. This is used to schedule
-   * rendering of the component.
-   */
-  override fun getMainComponentName(): String = "main"
-
-  /**
-   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]
-   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]
-   */
-  override fun createReactActivityDelegate(): ReactActivityDelegate {
-    return ReactActivityDelegateWrapper(
-          this,
-          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,
-          object : DefaultReactActivityDelegate(
-              this,
-              mainComponentName,
-              fabricEnabled
-          ){})
-  }
-
-  /**
-    * Align the back button behavior with Android S
-    * where moving root activities to background instead of finishing activities.
-    * @see <a href="https://developer.android.com/reference/android/app/Activity#onBackPressed()">onBackPressed</a>
-    */
-  override fun invokeDefaultOnBackPressed() {
-      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {
-          if (!moveTaskToBack(false)) {
-              // For non-root activities, use the default implementation to finish them.
-              super.invokeDefaultOnBackPressed()
-          }
-          return
-      }
-
-      // Use the default back button implementation on Android S
-      // because it's doing more than [Activity.moveTaskToBack] in fact.
-      super.invokeDefaultOnBackPressed()
-  }
-}
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ /dev/null	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"extends\": \"expo/tsconfig.base\",\r\n  \"compilerOptions\": {\r\n    \"strict\": true,\r\n    \"paths\": {\r\n      \"@/*\": [\r\n        \"./*\"\r\n      ]\r\n    }\r\n  },\r\n  \"include\": [\r\n    \"**/*.ts\",\r\n    \"**/*.tsx\",\r\n    \".expo/types/**/*.ts\",\r\n    \"expo-env.d.ts\"\r\n  ]\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tsconfig.json b/tsconfig.json
--- a/tsconfig.json	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/tsconfig.json	(date 1731981670258)
@@ -12,6 +12,7 @@
     "**/*.ts",
     "**/*.tsx",
     ".expo/types/**/*.ts",
-    "expo-env.d.ts"
+    "expo-env.d.ts",
+    "--jsx"
   ]
 }
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"proyecto\",\r\n  \"main\": \"expo-router/entry\",\r\n  \"version\": \"1.0.0\",\r\n  \"scripts\": {\r\n    \"start\": \"expo start\",\r\n    \"reset-project\": \"node ./scripts/reset-project.js\",\r\n    \"android\": \"expo run:android\",\r\n    \"ios\": \"expo run:ios\",\r\n    \"web\": \"expo start --web\",\r\n    \"test\": \"jest --watchAll\",\r\n    \"lint\": \"expo lint\"\r\n  },\r\n  \"jest\": {\r\n    \"preset\": \"jest-expo\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@expo/vector-icons\": \"^14.0.2\",\r\n    \"@react-navigation/bottom-tabs\": \"^7.0.0\",\r\n    \"@react-navigation/native\": \"^7.0.0\",\r\n    \"eas\": \"^0.1.0\",\r\n    \"expo\": \"~52.0.4\",\r\n    \"expo-blur\": \"~14.0.1\",\r\n    \"expo-constants\": \"~17.0.2\",\r\n    \"expo-file-system\": \"~18.0.3\",\r\n    \"expo-font\": \"~13.0.1\",\r\n    \"expo-haptics\": \"~14.0.0\",\r\n    \"expo-linking\": \"~7.0.2\",\r\n    \"expo-router\": \"~4.0.3\",\r\n    \"expo-splash-screen\": \"~0.29.7\",\r\n    \"expo-status-bar\": \"~2.0.0\",\r\n    \"expo-symbols\": \"~0.2.0\",\r\n    \"expo-system-ui\": \"~4.0.2\",\r\n    \"expo-web-browser\": \"~14.0.0\",\r\n    \"json-file\": \"^0.1.0\",\r\n    \"react\": \"18.3.1\",\r\n    \"react-dom\": \"18.3.1\",\r\n    \"react-native\": \"0.76.1\",\r\n    \"react-native-gesture-handler\": \"~2.20.2\",\r\n    \"react-native-reanimated\": \"~3.16.1\",\r\n    \"react-native-safe-area-context\": \"4.12.0\",\r\n    \"react-native-screens\": \"~4.0.0\",\r\n    \"react-native-web\": \"~0.19.13\",\r\n    \"react-native-webview\": \"13.12.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.25.2\",\r\n    \"@types/jest\": \"^29.5.12\",\r\n    \"@types/react\": \"~18.3.12\",\r\n    \"@types/react-test-renderer\": \"^18.3.0\",\r\n    \"jest\": \"^29.2.1\",\r\n    \"jest-expo\": \"~52.0.0\",\r\n    \"react-test-renderer\": \"18.3.1\",\r\n    \"typescript\": \"^5.3.3\"\r\n  },\r\n  \"private\": true\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/package.json	(date 1731981670254)
@@ -19,7 +19,7 @@
     "@react-navigation/bottom-tabs": "^7.0.0",
     "@react-navigation/native": "^7.0.0",
     "eas": "^0.1.0",
-    "expo": "~52.0.4",
+    "expo": "~52.0.7",
     "expo-blur": "~14.0.1",
     "expo-constants": "~17.0.2",
     "expo-file-system": "~18.0.3",
@@ -32,6 +32,7 @@
     "expo-symbols": "~0.2.0",
     "expo-system-ui": "~4.0.2",
     "expo-web-browser": "~14.0.0",
+    "fonts": "^0.0.2",
     "json-file": "^0.1.0",
     "react": "18.3.1",
     "react-dom": "18.3.1",
Index: app/editar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Text, View, Pressable, TextInput } from \"react-native\";\r\nimport { useContext, useState } from 'react';\r\nimport { Estilos } from \"@/constants/Styles\";\r\nimport { endpoints } from \"@/constants/endpoints\";\r\nimport { ContextEncuesta } from \"./context\";\r\n\r\nexport default function Index() {\r\n\r\n  const [agregarPregunta, setAgregarPregunta] = useState(false);\r\n  const [encuestaCreada, setEncuestaCreada] = useState(false);\r\n  const [encuestaVal, setEncuestaVal] = useState('');\r\n  const [encuestaId, setEncuestaId] = useState(0);\r\n  const [preguntaVal, setPreguntaVal] = useState('');\r\n  const [preguntaId, setPreguntaId] = useState(0);\r\n  const [respuesta1Val, setRespuesta1Val] = useState('');\r\n  const [respuesta2Val, setRespuesta2Val] = useState('');\r\n  const [respuesta3Val, setRespuesta3Val] = useState('');\r\n  const [respuesta4Val, setRespuesta4Val] = useState('');\r\n  const [valor] = useState('');\r\n  const {encuesta, setEncuesta} = useContext(ContextEncuesta);\r\n\r\n\r\n  \r\n  const toggleAgregarPregunta = async () => {\r\n    setAgregarPregunta(current => (current === false ? true : false));\r\n  }\r\n  const toggleEncuesta = async () => {\r\n    const form = new FormData();\r\n    form.append('encuesta', encuestaVal);\r\n    console.log(form);\r\n    fetch(endpoints.GUARDARENCUESTA, {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(\r\n      response => response.json()\r\n    ).then(\r\n      data =>{\r\n        console.log(data);\r\n        setEncuestaId(data['encuestaId']);\r\n      }\r\n    )\r\n\r\n    setEncuestaCreada(current => (current === false ? true : false));\r\n\r\n    fetch(endpoints.LASTID, {\r\n      method: 'POST',\r\n    }).then(\r\n      response => response.json()\r\n    ).then(\r\n      data => {\r\n        console.log(data);\r\n        setPreguntaId(data['id']);\r\n      }\r\n    )\r\n  }\r\n  \r\n  // const [encuesta, setEncuesta] = useState(leerArchivo);\r\n\r\n  function guardarPregunta (){\r\n    var form = new FormData();\r\n    form.append('id',encuestaId[0][0]);\r\n    form.append('pregunta',preguntaVal);\r\n\r\n    fetch(endpoints.GUARDARPREGUNTA, {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(\r\n      response => response.json()\r\n    ).then(\r\n      data => {\r\n        console.log('pregunta guardada:',data);\r\n        setPreguntaId(data['pregunta_id'][0]);\r\n        console.log('iddddd->', preguntaId);\r\n      }\r\n    )\r\n    console.log('pregunta',preguntaId);\r\n    return true;\r\n  }\r\n\r\n\r\n  function onButtonGuardar(){\r\n    // setEncuesta(\"Hola\");\r\n    if(preguntaVal != '' && respuesta1Val != '' && respuesta2Val != '' && respuesta3Val != '' && respuesta4Val != '' ){\r\n\r\n      const con = guardarPregunta();\r\n\r\n      console.log(\"Guardar respuestas (id)\",preguntaId);\r\n\r\n      var form2 = new FormData();\r\n      form2.append('pregunta_id', preguntaId);\r\n      form2.append('respuesta1', respuesta1Val);\r\n      form2.append('respuesta2', respuesta2Val);\r\n      form2.append('respuesta3', respuesta3Val);\r\n      form2.append('respuesta4', respuesta4Val);\r\n      \r\n      console.log(form2);\r\n\r\n      fetch(endpoints.GUARDARRESPUESTA, {\r\n        method: 'POST',\r\n        body: form2,\r\n      }).then(\r\n        response => response.json()\r\n      ).then(\r\n        data => {\r\n          console.log('Respuesta guardada:',data);\r\n          console.log(encuestaId);\r\n\r\n          setPreguntaVal('');\r\n          setRespuesta1Val('');\r\n          setRespuesta2Val('');\r\n          setRespuesta3Val('');\r\n          setRespuesta4Val('');\r\n          getPreguntas();\r\n        }\r\n      )\r\n      console.log('fin');\r\n    }\r\n  }\r\n\r\n  function getPreguntas(){\r\n    // console.log(encuestaId[0][0]);\r\n\r\n    var form = new FormData();\r\n    form.append('encuesta',encuestaId[0][0]);\r\n\r\n    fetch(endpoints.PREGUNTAS, {\r\n      method: 'POST',\r\n      body: form\r\n    }).then(\r\n      response => response.json()\r\n    ).then(\r\n      data => {\r\n        // console.log(data);\r\n        const enc_data = data['encuesta'];\r\n\r\n        // console.log(enc_data);\r\n        var aux_preguntas: any[] = [];\r\n        var id_pregunta = enc_data[0][3];\r\n        var aux_respuestas: any[] = [];\r\n        var aux_pregunta_nom;\r\n        for(var i in enc_data){//for de preguntas\r\n            if(id_pregunta == enc_data[i][3]){//si es la misma pregunta\r\n                aux_pregunta_nom = enc_data[i][0]\r\n                id_pregunta = enc_data[i][3];\r\n                var aux_respuesta_obj = {\r\n                    respuesta_id: enc_data[i][4],\r\n                    respuesta: enc_data[i][1],\r\n                    numero: enc_data[i][2],\r\n                };\r\n                // console.log(\"---------respuesta---------\");\r\n                aux_respuestas.push(aux_respuesta_obj);\r\n                // console.log(aux_respuestas);\r\n            }else{\r\n                var aux_pregunta_obj = {\r\n                    pregunta_id: id_pregunta,\r\n                    pregunta: aux_pregunta_nom,\r\n                    respuestas: aux_respuestas\r\n                };\r\n                aux_preguntas.push(aux_pregunta_obj);\r\n                aux_respuestas = [];\r\n                id_pregunta = enc_data[i][3]\r\n                \r\n                aux_pregunta_nom = enc_data[i][0];\r\n                id_pregunta = enc_data[i][3];\r\n                var aux_respuesta_obj = {\r\n                    respuesta_id: enc_data[i][4],\r\n                    respuesta: enc_data[i][1],\r\n                    numero: enc_data[i][2],\r\n                };\r\n                // console.log(\"---------respuesta---------\");\r\n                aux_respuestas.push(aux_respuesta_obj);\r\n            }\r\n            if(enc_data.length == parseInt(i)+1){\r\n                var aux_pregunta_obj = {\r\n                    pregunta_id: id_pregunta,\r\n                    pregunta: aux_pregunta_nom,\r\n                    respuestas: aux_respuestas\r\n                };\r\n                aux_preguntas.push(aux_pregunta_obj);\r\n            }\r\n        }\r\n        var enc = {\r\n            encuesta:encuestaVal,\r\n            preguntas: aux_preguntas\r\n        };\r\n        \r\n        // console.log(enc['preguntas']);\r\n        console.log(enc);\r\n        setPreguntas(enc['preguntas']);\r\n        console.log('preguntasssss',preguntas);\r\n        setHayPreguntas(true);\r\n        setEncuesta(enc);\r\n      }\r\n    )\r\n  }\r\n  const [preguntas, setPreguntas] = useState([]);\r\n  const [hayPreguntas, setHayPreguntas] = useState(false);\r\n\r\n\r\n  return (\r\n    <View style={Estilos.Principal}>\r\n      {encuestaCreada? (\r\n        <View>\r\n          {/* <Pressable onPress={toggleAgregarPregunta}><Text>Agragar pregunta +</Text></Pressable> */}\r\n          <Text>Pregunta id: {preguntaId}</Text>\r\n          <TextInput placeholder='Pregunta' onChangeText={setPreguntaVal} value={preguntaVal}></TextInput>\r\n          <TextInput placeholder='Respuesta 1' onChangeText={setRespuesta1Val} value={respuesta1Val}></TextInput>\r\n          <TextInput placeholder='Respuesta 2' onChangeText={setRespuesta2Val} value={respuesta2Val}></TextInput>\r\n          <TextInput placeholder='Respuesta 3' onChangeText={setRespuesta3Val} value={respuesta3Val}></TextInput>\r\n          <TextInput placeholder='Respuesta 4' onChangeText={setRespuesta4Val} value={respuesta4Val}></TextInput>\r\n          <Pressable onPress={onButtonGuardar}><Text>Guardar pregunta</Text></Pressable>\r\n          <Pressable onPress={getPreguntas}><Text>get preguntas</Text></Pressable>\r\n          {hayPreguntas? (\r\n            //tienes que hacer la funcion de que ya existen preguntas y otra funcion para que regtrese el for de como se verían las preguntas. desto lo regresa ya como html\r\n            <View>\r\n              {preguntas.map((preg) => {\r\n                return(\r\n                  <View key={preg.pregunta_id}>\r\n                    <Text>{preg.pregunta}</Text>\r\n                    <Text>R1. {preg.respuestas[0]['respuesta']}</Text>\r\n                    <Text>R2. {preg.respuestas[1]['respuesta']}</Text>\r\n                    <Text>R3. {preg.respuestas[2]['respuesta']}</Text>\r\n                    <Text>R4. {preg.respuestas[3]['respuesta']}</Text>\r\n                  </View>\r\n                );\r\n              })}\r\n              <Pressable style={Estilos.Boton}><Text>Guardar encuesta</Text></Pressable>\r\n            </View>\r\n          ):undefined}\r\n        </View>\r\n        \r\n      ):(\r\n        <View>\r\n          <TextInput placeholder='Ingresa el nombre del cuestionario' onChangeText={setEncuestaVal}></TextInput>\r\n          <Pressable onPress={toggleEncuesta}><Text>Guardar nombre</Text></Pressable>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/editar.tsx b/app/editar.tsx
--- a/app/editar.tsx	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/app/editar.tsx	(date 1731981720064)
@@ -3,6 +3,7 @@
 import { Estilos } from "@/constants/Styles";
 import { endpoints } from "@/constants/endpoints";
 import { ContextEncuesta } from "./context";
+import { Link, router } from 'expo-router';
 
 export default function Index() {
 
@@ -68,8 +69,8 @@
       response => response.json()
     ).then(
       data => {
-        console.log('pregunta guardada:',data);
-        setPreguntaId(data['pregunta_id'][0]);
+        console.log('pregunta guardada:',data['pregunta_id'][0][0]);
+        setPreguntaId(data['pregunta_id'][0][0]);
         console.log('iddddd->', preguntaId);
       }
     )
@@ -83,7 +84,7 @@
     if(preguntaVal != '' && respuesta1Val != '' && respuesta2Val != '' && respuesta3Val != '' && respuesta4Val != '' ){
 
       const con = guardarPregunta();
-
+      console.log(con)
       console.log("Guardar respuestas (id)",preguntaId);
 
       var form2 = new FormData();
@@ -111,6 +112,7 @@
           setRespuesta3Val('');
           setRespuesta4Val('');
           getPreguntas();
+          setPreguntaId(parseInt(preguntaId)+1);
         }
       )
       console.log('fin');
@@ -196,6 +198,10 @@
   const [preguntas, setPreguntas] = useState([]);
   const [hayPreguntas, setHayPreguntas] = useState(false);
 
+  function guardarEncuesta(){
+    console.log(encuesta);
+    router.navigate('/encuesta');
+  }
 
   return (
     <View style={Estilos.Principal}>
@@ -224,7 +230,11 @@
                   </View>
                 );
               })}
+<<<<<<< HEAD
               <Pressable style={Estilos.Boton}><Text>Guardar encuesta</Text></Pressable>
+=======
+              <Pressable style={Estilos.Boton} onPress={guardarEncuesta}><Text>Guardar encuesta</Text></Pressable>
+>>>>>>> 65708b6ab39b96febde8539b8abd02ecac2907a9
             </View>
           ):undefined}
         </View>
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	(revision dfb30a7acfbe5dceaacb9a53faadb6bcaff64b8b)
+++ b/package-lock.json	(date 1731981670253)
@@ -12,7 +12,7 @@
         "@react-navigation/bottom-tabs": "^7.0.0",
         "@react-navigation/native": "^7.0.0",
         "eas": "^0.1.0",
-        "expo": "~52.0.4",
+        "expo": "~52.0.7",
         "expo-blur": "~14.0.1",
         "expo-constants": "~17.0.2",
         "expo-file-system": "~18.0.3",
@@ -25,6 +25,7 @@
         "expo-symbols": "~0.2.0",
         "expo-system-ui": "~4.0.2",
         "expo-web-browser": "~14.0.0",
+        "fonts": "^0.0.2",
         "json-file": "^0.1.0",
         "react": "18.3.1",
         "react-dom": "18.3.1",
@@ -583,6 +584,7 @@
       "version": "7.25.9",
       "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.25.9.tgz",
       "integrity": "sha512-smkNLL/O1ezy9Nhy4CNosc4Va+1wo5w4gzSZeLe6y6dM4mmHfYOCPolXQPHQxonZCF+ZyebxN9vqOolkYrSn5g==",
+      "license": "MIT",
       "dependencies": {
         "@babel/helper-create-class-features-plugin": "^7.25.9",
         "@babel/helper-plugin-utils": "^7.25.9",
@@ -705,6 +707,7 @@
       "version": "7.25.9",
       "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.25.9.tgz",
       "integrity": "sha512-ryzI0McXUPJnRCvMo4lumIKZUzhYUO/ScI+Mz4YVaTLt04DHNSjEUjKVvbzQjZFLuod/cYEc07mJWhzl6v4DPg==",
+      "license": "MIT",
       "dependencies": {
         "@babel/helper-plugin-utils": "^7.25.9"
       },
@@ -1574,6 +1577,7 @@
       "version": "7.25.9",
       "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.25.9.tgz",
       "integrity": "sha512-9mj6rm7XVYs4mdLIpbZnHOYdpW42uoiBCTVowg7sP1thUOiANgMb4UtpRivR0pp5iL+ocvUv7X4mZgFRpJEzGw==",
+      "license": "MIT",
       "dependencies": {
         "@babel/plugin-transform-react-jsx": "^7.25.9"
       },
@@ -1616,6 +1620,7 @@
       "version": "7.25.9",
       "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.25.9.tgz",
       "integrity": "sha512-KQ/Takk3T8Qzj5TppkS1be588lkbTp5uj7w6a0LeQaTMSckU/wK0oJ/pih+T690tkgI5jfmg2TqDJvd41Sj1Cg==",
+      "license": "MIT",
       "dependencies": {
         "@babel/helper-annotate-as-pure": "^7.25.9",
         "@babel/helper-plugin-utils": "^7.25.9"
@@ -1961,6 +1966,7 @@
       "version": "7.25.9",
       "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.25.9.tgz",
       "integrity": "sha512-D3to0uSPiWE7rBrdIICCd0tJSIGpLaaGptna2+w7Pft5xMqLpA1sz99DK5TZ1TjGbdQ/VI1eCSZ06dv3lT4JOw==",
+      "license": "MIT",
       "dependencies": {
         "@babel/helper-plugin-utils": "^7.25.9",
         "@babel/helper-validator-option": "^7.25.9",
@@ -2133,9 +2139,9 @@
       }
     },
     "node_modules/@expo/cli": {
-      "version": "0.21.3",
-      "resolved": "https://registry.npmjs.org/@expo/cli/-/cli-0.21.3.tgz",
-      "integrity": "sha512-r7MUilXmvtJ3inxD1P+uefTmVrIV43QLZlG0YvHPGX2NGCZcFFXwZkSquqnfZ2gzOXdHs2cAbqLJsH37nDq14g==",
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@expo/cli/-/cli-0.21.5.tgz",
+      "integrity": "sha512-hd0pC5ntZxon7IijOsqp5wPOMGtaQNvTPOc74EQc+WS+Cldd7cMNSKKVUI2X7Lrn2Zcje9ne/WgGCnMTjdcVgA==",
       "license": "MIT",
       "dependencies": {
         "@0no-co/graphql.web": "^1.0.8",
@@ -2151,11 +2157,11 @@
         "@expo/osascript": "^2.0.31",
         "@expo/package-manager": "^1.5.0",
         "@expo/plist": "^0.2.0",
-        "@expo/prebuild-config": "^8.0.15",
+        "@expo/prebuild-config": "^8.0.16",
         "@expo/rudder-sdk-node": "^1.1.1",
         "@expo/spawn-async": "^1.7.2",
         "@expo/xcpretty": "^4.3.0",
-        "@react-native/dev-middleware": "0.76.1",
+        "@react-native/dev-middleware": "0.76.2",
         "@urql/core": "^5.0.6",
         "@urql/exchange-retry": "^1.3.0",
         "accepts": "^1.3.8",
@@ -2215,9 +2221,9 @@
       }
     },
     "node_modules/@expo/cli/node_modules/@expo/prebuild-config": {
-      "version": "8.0.15",
-      "resolved": "https://registry.npmjs.org/@expo/prebuild-config/-/prebuild-config-8.0.15.tgz",
-      "integrity": "sha512-vUx8N25l4PTYps5+v2f8aPguDIjQmyB5LVMvhxTc287T9u/YHZVTWP6YviBfF7ee2+LLBpItxH56gxkuL71NFw==",
+      "version": "8.0.17",
+      "resolved": "https://registry.npmjs.org/@expo/prebuild-config/-/prebuild-config-8.0.17.tgz",
+      "integrity": "sha512-HM+XpDox3fAZuXZXvy55VRcBbsZSDijGf8jI8i/pexgWvtsnt1ouelPXRuE1pXDicMX+lZO83QV+XkyLmBEXYQ==",
       "license": "MIT",
       "dependencies": {
         "@expo/config": "~10.0.4",
@@ -2225,7 +2231,7 @@
         "@expo/config-types": "^52.0.0",
         "@expo/image-utils": "^0.6.0",
         "@expo/json-file": "^9.0.0",
-        "@react-native/normalize-colors": "0.76.1",
+        "@react-native/normalize-colors": "0.76.2",
         "debug": "^4.3.1",
         "fs-extra": "^9.0.0",
         "resolve-from": "^5.0.0",
@@ -2248,6 +2254,61 @@
         "node": ">=10"
       }
     },
+    "node_modules/@expo/cli/node_modules/@react-native/debugger-frontend": {
+      "version": "0.76.2",
+      "resolved": "https://registry.npmjs.org/@react-native/debugger-frontend/-/debugger-frontend-0.76.2.tgz",
+      "integrity": "sha512-FIcz24Oya2wIO7rZD3dxVyK8t5ZD6Fojl9o7lrjnTWqMedcevRTtdSOIAf4ypksYH/x7HypovE2Zp8U65Xv0Mw==",
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@expo/cli/node_modules/@react-native/dev-middleware": {
+      "version": "0.76.2",
+      "resolved": "https://registry.npmjs.org/@react-native/dev-middleware/-/dev-middleware-0.76.2.tgz",
+      "integrity": "sha512-qiowXpxofLk0lpIZps7fyyp9NiKlqBwh0R0yVub5l4EJcqjLonjsznYAHbusnPW9kb9MQSdovGPNv5b8RadJww==",
+      "license": "MIT",
+      "dependencies": {
+        "@isaacs/ttlcache": "^1.4.1",
+        "@react-native/debugger-frontend": "0.76.2",
+        "chrome-launcher": "^0.15.2",
+        "chromium-edge-launcher": "^0.2.0",
+        "connect": "^3.6.5",
+        "debug": "^2.2.0",
+        "nullthrows": "^1.1.1",
+        "open": "^7.0.3",
+        "selfsigned": "^2.4.1",
+        "serve-static": "^1.13.1",
+        "ws": "^6.2.3"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@expo/cli/node_modules/@react-native/dev-middleware/node_modules/debug": {
+      "version": "2.6.9",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+      "license": "MIT",
+      "dependencies": {
+        "ms": "2.0.0"
+      }
+    },
+    "node_modules/@expo/cli/node_modules/@react-native/dev-middleware/node_modules/ws": {
+      "version": "6.2.3",
+      "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.3.tgz",
+      "integrity": "sha512-jmTjYU0j60B+vHey6TfR3Z7RD61z/hmxBS3VMSGIrroOWXQEneK1zNuotOUrGyBHQj0yrpsLHPWtigEFd13ndA==",
+      "license": "MIT",
+      "dependencies": {
+        "async-limiter": "~1.0.0"
+      }
+    },
+    "node_modules/@expo/cli/node_modules/@react-native/normalize-colors": {
+      "version": "0.76.2",
+      "resolved": "https://registry.npmjs.org/@react-native/normalize-colors/-/normalize-colors-0.76.2.tgz",
+      "integrity": "sha512-ICoOpaTLPsFQjNLSM00NgQr6wal300cZZonHVSDXKntX+BfkLeuCHRtr/Mn+klTtW+/1v2/2FRm9dXjvyGf9Dw==",
+      "license": "MIT"
+    },
     "node_modules/@expo/cli/node_modules/jsonfile": {
       "version": "6.1.0",
       "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
@@ -2260,6 +2321,12 @@
         "graceful-fs": "^4.1.6"
       }
     },
+    "node_modules/@expo/cli/node_modules/ms": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
+      "license": "MIT"
+    },
     "node_modules/@expo/cli/node_modules/semver": {
       "version": "7.6.3",
       "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.3.tgz",
@@ -4805,7 +4872,8 @@
     "node_modules/babel-plugin-react-native-web": {
       "version": "0.19.13",
       "resolved": "https://registry.npmjs.org/babel-plugin-react-native-web/-/babel-plugin-react-native-web-0.19.13.tgz",
-      "integrity": "sha512-4hHoto6xaN23LCyZgL9LJZc3olmAxd7b6jDzlZnKXAh4rRAbZRKNBJoOOdp46OBqgy+K0t0guTj5/mhA8inymQ=="
+      "integrity": "sha512-4hHoto6xaN23LCyZgL9LJZc3olmAxd7b6jDzlZnKXAh4rRAbZRKNBJoOOdp46OBqgy+K0t0guTj5/mhA8inymQ==",
+      "license": "MIT"
     },
     "node_modules/babel-plugin-syntax-hermes-parser": {
       "version": "0.23.1",
@@ -4849,9 +4917,10 @@
       }
     },
     "node_modules/babel-preset-expo": {
-      "version": "12.0.0",
-      "resolved": "https://registry.npmjs.org/babel-preset-expo/-/babel-preset-expo-12.0.0.tgz",
-      "integrity": "sha512-rUnaIHdF26LxPyB+tvGjxck4fM9bYdPGpgjoNhjz6PoHYC+LZKBv9IyyPgKoMjOYG1sYOp7tB7BvKG8HFG1hQA==",
+      "version": "12.0.1",
+      "resolved": "https://registry.npmjs.org/babel-preset-expo/-/babel-preset-expo-12.0.1.tgz",
+      "integrity": "sha512-9T2o+aeKnHOtQhk/undQbibJv02bdCgfs68ZwgAdueljDBcs2oVfq41qG9XThYwa6Dn7CdfnoEUsIyFqBwjcVw==",
+      "license": "MIT",
       "dependencies": {
         "@babel/plugin-proposal-decorators": "^7.12.9",
         "@babel/plugin-transform-export-namespace-from": "^7.22.11",
@@ -4859,7 +4928,7 @@
         "@babel/plugin-transform-parameters": "^7.22.15",
         "@babel/preset-react": "^7.22.15",
         "@babel/preset-typescript": "^7.23.0",
-        "@react-native/babel-preset": "0.76.1",
+        "@react-native/babel-preset": "0.76.2",
         "babel-plugin-react-native-web": "~0.19.13",
         "react-refresh": "^0.14.2"
       },
@@ -4876,6 +4945,144 @@
         }
       }
     },
+    "node_modules/babel-preset-expo/node_modules/@react-native/babel-plugin-codegen": {
+      "version": "0.76.2",
+      "resolved": "https://registry.npmjs.org/@react-native/babel-plugin-codegen/-/babel-plugin-codegen-0.76.2.tgz",
+      "integrity": "sha512-a1IfRho/ZUVbvzSu3JWkxsvqyEI7IXApPQikhGWw4e24QYsIYHdlIULs3rb0840lqpO1dbbuudfO7lmkpkbkMg==",
+      "license": "MIT",
+      "dependencies": {
+        "@react-native/codegen": "0.76.2"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/babel-preset-expo/node_modules/@react-native/babel-preset": {
+      "version": "0.76.2",
+      "resolved": "https://registry.npmjs.org/@react-native/babel-preset/-/babel-preset-0.76.2.tgz",
+      "integrity": "sha512-/kbxZqy70mGONv23uZg7lm7ZCE4dO5dgMzVPz6QsveXIRHQBRLsSC+9w2iZEnYWpLayoWFmTbq8ZG+4W32D3bA==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/core": "^7.25.2",
+        "@babel/plugin-proposal-export-default-from": "^7.24.7",
+        "@babel/plugin-syntax-dynamic-import": "^7.8.3",
+        "@babel/plugin-syntax-export-default-from": "^7.24.7",
+        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
+        "@babel/plugin-syntax-optional-chaining": "^7.8.3",
+        "@babel/plugin-transform-arrow-functions": "^7.24.7",
+        "@babel/plugin-transform-async-generator-functions": "^7.25.4",
+        "@babel/plugin-transform-async-to-generator": "^7.24.7",
+        "@babel/plugin-transform-block-scoping": "^7.25.0",
+        "@babel/plugin-transform-class-properties": "^7.25.4",
+        "@babel/plugin-transform-classes": "^7.25.4",
+        "@babel/plugin-transform-computed-properties": "^7.24.7",
+        "@babel/plugin-transform-destructuring": "^7.24.8",
+        "@babel/plugin-transform-flow-strip-types": "^7.25.2",
+        "@babel/plugin-transform-for-of": "^7.24.7",
+        "@babel/plugin-transform-function-name": "^7.25.1",
+        "@babel/plugin-transform-literals": "^7.25.2",
+        "@babel/plugin-transform-logical-assignment-operators": "^7.24.7",
+        "@babel/plugin-transform-modules-commonjs": "^7.24.8",
+        "@babel/plugin-transform-named-capturing-groups-regex": "^7.24.7",
+        "@babel/plugin-transform-nullish-coalescing-operator": "^7.24.7",
+        "@babel/plugin-transform-numeric-separator": "^7.24.7",
+        "@babel/plugin-transform-object-rest-spread": "^7.24.7",
+        "@babel/plugin-transform-optional-catch-binding": "^7.24.7",
+        "@babel/plugin-transform-optional-chaining": "^7.24.8",
+        "@babel/plugin-transform-parameters": "^7.24.7",
+        "@babel/plugin-transform-private-methods": "^7.24.7",
+        "@babel/plugin-transform-private-property-in-object": "^7.24.7",
+        "@babel/plugin-transform-react-display-name": "^7.24.7",
+        "@babel/plugin-transform-react-jsx": "^7.25.2",
+        "@babel/plugin-transform-react-jsx-self": "^7.24.7",
+        "@babel/plugin-transform-react-jsx-source": "^7.24.7",
+        "@babel/plugin-transform-regenerator": "^7.24.7",
+        "@babel/plugin-transform-runtime": "^7.24.7",
+        "@babel/plugin-transform-shorthand-properties": "^7.24.7",
+        "@babel/plugin-transform-spread": "^7.24.7",
+        "@babel/plugin-transform-sticky-regex": "^7.24.7",
+        "@babel/plugin-transform-typescript": "^7.25.2",
+        "@babel/plugin-transform-unicode-regex": "^7.24.7",
+        "@babel/template": "^7.25.0",
+        "@react-native/babel-plugin-codegen": "0.76.2",
+        "babel-plugin-syntax-hermes-parser": "^0.25.1",
+        "babel-plugin-transform-flow-enums": "^0.0.2",
+        "react-refresh": "^0.14.0"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "peerDependencies": {
+        "@babel/core": "*"
+      }
+    },
+    "node_modules/babel-preset-expo/node_modules/@react-native/codegen": {
+      "version": "0.76.2",
+      "resolved": "https://registry.npmjs.org/@react-native/codegen/-/codegen-0.76.2.tgz",
+      "integrity": "sha512-rIgdI5mHHnNTzAeDYH+ivKMIcv6vr04Ol+TmX77n1HjJkzMhQqSHWcX+Pq9oiu7l2zKkymadrw6OPD8VPgre8g==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.25.3",
+        "glob": "^7.1.1",
+        "hermes-parser": "0.23.1",
+        "invariant": "^2.2.4",
+        "jscodeshift": "^0.14.0",
+        "mkdirp": "^0.5.1",
+        "nullthrows": "^1.1.1",
+        "yargs": "^17.6.2"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "peerDependencies": {
+        "@babel/preset-env": "^7.1.6"
+      }
+    },
+    "node_modules/babel-preset-expo/node_modules/babel-plugin-syntax-hermes-parser": {
+      "version": "0.25.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-hermes-parser/-/babel-plugin-syntax-hermes-parser-0.25.1.tgz",
+      "integrity": "sha512-IVNpGzboFLfXZUAwkLFcI/bnqVbwky0jP3eBno4HKtqvQJAHBLdgxiG6lQ4to0+Q/YCN3PO0od5NZwIKyY4REQ==",
+      "license": "MIT",
+      "dependencies": {
+        "hermes-parser": "0.25.1"
+      }
+    },
+    "node_modules/babel-preset-expo/node_modules/babel-plugin-syntax-hermes-parser/node_modules/hermes-parser": {
+      "version": "0.25.1",
+      "resolved": "https://registry.npmjs.org/hermes-parser/-/hermes-parser-0.25.1.tgz",
+      "integrity": "sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==",
+      "license": "MIT",
+      "dependencies": {
+        "hermes-estree": "0.25.1"
+      }
+    },
+    "node_modules/babel-preset-expo/node_modules/glob": {
+      "version": "7.2.3",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
+      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
+      "deprecated": "Glob versions prior to v9 are no longer supported",
+      "license": "ISC",
+      "dependencies": {
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
+        "inherits": "2",
+        "minimatch": "^3.1.1",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
+      },
+      "engines": {
+        "node": "*"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/babel-preset-expo/node_modules/hermes-estree": {
+      "version": "0.25.1",
+      "resolved": "https://registry.npmjs.org/hermes-estree/-/hermes-estree-0.25.1.tgz",
+      "integrity": "sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==",
+      "license": "MIT"
+    },
     "node_modules/babel-preset-jest": {
       "version": "29.6.3",
       "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-29.6.3.tgz",
@@ -6334,9 +6541,9 @@
       }
     },
     "node_modules/execa/node_modules/cross-spawn": {
-      "version": "6.0.5",
-      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
-      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
+      "version": "6.0.6",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.6.tgz",
+      "integrity": "sha512-VqCUuhcd1iB+dsv8gxPttb5iZh/D0iubSP21g36KXdEuf6I5JiioesUVjpCdHV9MZRUfVFlvwtIUyPfxo5trtw==",
       "license": "MIT",
       "dependencies": {
         "nice-try": "^1.0.4",
@@ -6432,26 +6639,26 @@
       }
     },
     "node_modules/expo": {
-      "version": "52.0.6",
-      "resolved": "https://registry.npmjs.org/expo/-/expo-52.0.6.tgz",
-      "integrity": "sha512-Dci5Ezs+98KZ+onLl0pQ2y+t2cW3Kkhqv485nxZXPpSqcp+Y33ZZ6L+SUxY2zhnYx/cB5LNPnjDmrEdaCAP60A==",
+      "version": "52.0.7",
+      "resolved": "https://registry.npmjs.org/expo/-/expo-52.0.7.tgz",
+      "integrity": "sha512-AXN+FmYF8jR+IUJCuETO9iuMZ2DdGpL175kvHveBM/cS4MQsF7oe1MTnCRLyXQ92BDUZlqjWqWTX1sY3ysPoZw==",
       "license": "MIT",
       "dependencies": {
         "@babel/runtime": "^7.20.0",
-        "@expo/cli": "0.21.3",
+        "@expo/cli": "0.21.5",
         "@expo/config": "~10.0.4",
         "@expo/config-plugins": "9.0.9",
         "@expo/fingerprint": "0.11.2",
         "@expo/metro-config": "0.19.4",
         "@expo/vector-icons": "^14.0.0",
-        "babel-preset-expo": "~12.0.0",
+        "babel-preset-expo": "~12.0.1",
         "expo-asset": "~11.0.1",
         "expo-constants": "~17.0.3",
         "expo-file-system": "~18.0.3",
         "expo-font": "~13.0.1",
         "expo-keep-awake": "~14.0.1",
         "expo-modules-autolinking": "2.0.2",
-        "expo-modules-core": "2.0.2",
+        "expo-modules-core": "2.0.3",
         "fbemitter": "^3.0.0",
         "web-streams-polyfill": "^3.3.2",
         "whatwg-url-without-unicode": "8.0.0-3"
@@ -6628,9 +6835,9 @@
       }
     },
     "node_modules/expo-modules-core": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/expo-modules-core/-/expo-modules-core-2.0.2.tgz",
-      "integrity": "sha512-IZdxGXxZXFtmffJOM9LDfeOQeJUftgAZxnPkz62bnbAQc0yUrOSZ+XsX0RP92xq7qGtdcL551GuzxWWbBG5EGA==",
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/expo-modules-core/-/expo-modules-core-2.0.3.tgz",
+      "integrity": "sha512-S/Ozg6NhLkMc7k+qSLzOtjCexuimkYXHM/PCZtbn53nkuNYyaLpfVfrsJsRWxLIMe8ftbm6cDrKlN5mJ6lNODg==",
       "license": "MIT",
       "dependencies": {
         "invariant": "^2.2.4"
@@ -7018,6 +7225,12 @@
       "resolved": "https://registry.npmjs.org/fontfaceobserver/-/fontfaceobserver-2.3.0.tgz",
       "integrity": "sha512-6FPvD/IVyT4ZlNe7Wcn5Fb/4ChigpucKYSvD6a+0iMoLn2inpo711eyIcKjmDtE5XNcgAkSH9uN/nfAeZzHEfg=="
     },
+    "node_modules/fonts": {
+      "version": "0.0.2",
+      "resolved": "https://registry.npmjs.org/fonts/-/fonts-0.0.2.tgz",
+      "integrity": "sha512-tKwxaeJZb6w0U1yNVDdjtuYaIUljA4qjRboSXvoybDFKFkX12tZ4wxRsi50X7s3MK80I8mka8uROPZeGQ2A8xg==",
+      "license": "BSD"
+    },
     "node_modules/for-each": {
       "version": "0.3.3",
       "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
